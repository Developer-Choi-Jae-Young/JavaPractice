package com.kh.phone.control;

import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

import com.kh.phone.model.vo.PhoneBook;

public class PhoneBookControl {
	private static final String FILE_PATH = "./resources";
	private PhoneBook[] pbList = new PhoneBook[100];
	private int currentPhoneListCount = 0;

	public void insertPhone(PhoneBook phoneBook) {

	}

	public PhoneBook[] readPhone() {
		return pbList;
	}

	public void updatePhone(int index) {
		//pbList[index] = ;
	}

	public void deletePhone(int index) {
		for(int i = index; i < currentPhoneListCount; i++) {
			pbList[index] = pbList[index + 1]; 
		}
	}

	public void makeFile(String fileName) {
		File f = new File(FILE_PATH, fileName);

		if (!f.exists()) {
			try {
				f.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public PhoneBook[] readFile(String fileName) {
		try {
			ObjectInputStream ois = new ObjectInputStream(new FileInputStream( new File(FILE_PATH, fileName)));		
			
			while(true) {
				PhoneBook pb = (PhoneBook)ois.readObject();
				pbList[currentPhoneListCount++] = pb;
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}catch (EOFException e) {
			//file read is end
		}catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		
		return pbList;
	}

	public void wrtieFile(String fileName, PhoneBook phoneBook) {
		try {
			ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream( new File(FILE_PATH, fileName)));		
			
			oos.writeObject(phoneBook);
			oos.flush();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public int getCurrentPhoneListCount() {
		return this.currentPhoneListCount; 
	}
}
